# import UserOrderByInput, UserWhereInput from "../generated/prisma.graphql"
# import User, CreateUserInput, UpdateUserInput  from "./types/user.graphql"
# import AuthPayload, LoginUserInput  from "./types/auth.graphql"
# import @requireAuth, @paginate, @default from "./directives/directives.graphql"


type Query {
    users(pagination: PaginationInput, where: UserWhereInput, orderBy: UserOrderByInput): UsersConnection! @paginate
}


input PaginationInput {
    page: Int!
    perPage: Int
}
type Mutation {
    login(data: LoginUserInput!): AuthPayload!
    signup(data: CreateUserInput!): AuthPayload!
    updateUser(data: UpdateUserInput!): User! @requireAuth
    deleteUser: User! @requireAuth
}

type PageInfo {
    currentPage: Int
    perPage: Int
    total: Int
    lastPage: Int
    nextPage: Int
    prevPage: Int
}

enum MutationType {
    CREATED
    UPDATED
    DELETED
}